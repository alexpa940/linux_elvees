# SPDX-License-Identifier: (GPL-2.0 OR BSD-2-Clause)
%YAML 1.2
---
$id: http://devicetree.org/schemas/gpio/snps,dw-apb-gpio.yaml#
$schema: http://devicetree.org/meta-schemas/core.yaml#

title: Synopsys DesignWare APB GPIO controller

description: |
  Synopsys DesignWare GPIO controllers have a configurable number of ports,
  each of which are intended to be represented as child nodes with the generic
  GPIO-controller properties as desribed in this bindings file.

maintainers:
  - Hoan Tran <hoan@os.amperecomputing.com>
  - Serge Semin <fancer.lancer@gmail.com>

properties:
  $nodename:
    pattern: "^gpio@[0-9a-f]+$"

  compatible:
    const: snps,dw-apb-gpio

  "#address-cells":
    const: 1

  "#size-cells":
    const: 0

  reg:
    maxItems: 1

  clocks:
    minItems: 1
    items:
      - description: APB interface clock source
      - description: DW GPIO debounce reference clock source

  clock-names:
    minItems: 1
    items:
      - const: bus
      - const: db

  resets:
    maxItems: 1

  snps,has-mux:
    description: |
      register the pinctrl controller if GPIO_HW_PORT{A,B,C,D} hardware
      configuration parameter is activated. This parameter requires
      "gpio-ranges".

  snps,mux-individual-pins:
    description: |
      enable multiplexing individual pin in a port if hardware configuration
      parameter GPIO_PORT{A,B,C,D}_SINGLE_CTL is deactivated.

  gpio-ranges:
    description: >
      Used for interaction with the PINCTRL subsystem, it requires 4 fields in
      cells defined as:
       1. Phandle of pin-controller.
       2. GPIO base pin offset, should be 0.
       3  Pin-control base pin offset, should be 0.
       4. number of gpio pins.

patternProperties:
  "^gpio-(port|controller)@[0-9a-f]+$":
    type: object
    description: >
      Required properties for pin configuration node:
      - function: String representing a function to mux. Must be set to "HW"
        if there is a need to use the pin/pins in hardware mode. Otherways the
        pin can be requested from the gpio subsystem(from other drivers or
        userspace) to be used in software mode.
      - groups: List of pins to which the configuration applies. The array of
        pins names in a port starts with 'pin0' and ends with
        'pin[snps,nr-gpios - 1]'. If the port doesn't support
        'snps,mux-individual-pins' property then it will have one group
        according to the port name 'gpio{A,B,C,D}_grp', this group will have the
        same amount of pins in 'snps,nr-gpios' property.
    properties:
      compatible:
        const: snps,dw-apb-gpio-port

      reg:
        maxItems: 1

      gpio-controller: true

      '#gpio-cells':
        const: 2

      ngpios:
        default: 32
        minimum: 1
        maximum: 32

      snps,nr-gpios:
        description: The number of GPIO pins exported by the port.
        deprecated: true
        $ref: /schemas/types.yaml#/definitions/uint32
        default: 32
        minimum: 1
        maximum: 32

      interrupts:
        description: |
          The interrupts to the parent controller raised when GPIOs generate
          the interrupts. If the controller provides one combined interrupt
          for all GPIOs, specify a single interrupt. If the controller provides
          one interrupt for each GPIO, provide a list of interrupts that
          correspond to each of the GPIO pins.
        minItems: 1
        maxItems: 32

      interrupt-controller: true

      '#interrupt-cells':
        const: 2

    required:
      - compatible
      - reg
      - gpio-controller
      - '#gpio-cells'

    dependencies:
      interrupt-controller: [ interrupts ]

    additionalProperties: false

additionalProperties: false

required:
  - compatible
  - reg
  - "#address-cells"
  - "#size-cells"

examples:
  - |
    gpio: gpio@20000 {
      compatible = "snps,dw-apb-gpio";
      reg = <0x20000 0x1000>;
      #address-cells = <1>;
      #size-cells = <0>;

      porta: gpio-port@0 {
        compatible = "snps,dw-apb-gpio-port";
        reg = <0>;
        gpio-controller;
        #gpio-cells = <2>;
        snps,nr-gpios = <8>;
        interrupt-controller;
        #interrupt-cells = <2>;
        interrupt-parent = <&vic1>;
        interrupts = <0>;
      };

      portb: gpio-port@1 {
        compatible = "snps,dw-apb-gpio-port";
        reg = <1>;
        gpio-controller;
        #gpio-cells = <2>;
        snps,nr-gpios = <8>;
        snps,has-mux;
        snps,mux-individual-pins;
        gpio-ranges = <&portb 0 0 8>;

        uart0_default: uart0-default {
          /* pins = tx, rx */
          groups = "pin0", "pin1";
          function = "HW";
        };
      };
    };
...
